# Copyright (c) 2016 by Mike Jarvis and the other collaborators on GitHub at
# https://github.com/rmjarvis/Piff  All rights reserved.
#
# Piff is free software: Redistribution and use in source and binary forms
# with or without modification, are permitted provided that the following
# conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the disclaimer given in the accompanying LICENSE
#    file.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the disclaimer given in the documentation
#    and/or other materials provided with the distribution.

#
# Also, this configuration requires the pixmappy Python package, which can be
# installed via
#
#   pip install git+https://github.com/gbernstein/pixmappy.git
#
# However, if you don't want to use that, you can remove (or comment out) the
# modules and input.wcs fields, in which case, the code will use the (less
# accurate) WCS that ships with the image in the fits file.

input:

    # Input file directory
    dir: "./"

    # You can specify this either as a single filenames, a list of
    # filenames, or something that glob.glob() will understand.
    image_file_name: 'round1/mock_superbit_obs_001.sub.fits'

    image_hdu: 0    # When rice-compressed, image is in hdu=1, not hdu=0.
    #badpix_hdu: 2
    #weight_hdu: 4

    cat_file_name: 'round1/mock_superbit_obs_001_stars.ldac'

    cat_hdu: 2

    # We use the GalSim config parser, which lets you eval python lines by starting a
    # string with $.
    # You can also grab the current value of some other item in the config during processing.
    # In this case input.image_file_name is the current image file name.
    # Then this strips off the ending, starting with '_', gets the bit before the '.', and
    # converts it to an integer.
    # chipnum: "$int((@input.image_file_name).rsplit('_')[-3][1:])"

    # What columns in the catalog have things we need?
    x_col: XWIN_IMAGE
    y_col: YWIN_IMAGE
    ra_col: ALPHAWIN_J2000
    dec_col: DELTAWIN_J2000

    # The telescope pointing is in the image header
    ra: 149.9303551903936
    dec: 2.380272767453749

    # DES Y3 processed images are normalized to have gain=1.
    # Leave blank if you don't know what it is!
    # gain: 1.0

    # How large should the postage stamp cutouts of the stars be?
    stamp_size: 30

    # Use all cores for reading the input files
    nproc: -1

    # Tell Piff to use the better Pixmappy WCS, not the one in the FITS file.
    # If you don't want to install Pixmappy, you can just comment out this bit and the
    # modules section above, and it will just use the WCS in the FITS file rather than this.
    #wcs:
    #    type: Pixmappy
    #    dir: "350139"
    #    # Note: This file was modified to only include the parts relevant to this exposure.
    #    # DES users would normally just use the full zone135.astro file.
    #    file_name: 'zone135_mod.astro'
    #    exp: 350139
    #    ccdnum: '@input.chipnum'

select:

    # For bright stars, weight them equivalent to snr=100 stars, not higher.
    max_snr: 100

    # Remove stars with snr < 0.5
    min_snr: 0.2

    # Reserve 15% of the stars for diagnostics
    reserve_frac: 0.15

    # If you want the reserve choice consistent across runs, set this to something.
    seed:

psf:

    # This type of PSF will use a separate model/interp solution for each chip.
    # But all the solutions will be given in a single output file.
    # For the DES Y3 solutions, we actually did type: Simple, which is almost the
    # same, but makes a separate file for each CCD.
    type: SingleChip

    # Also use all cores when finding psf
    nproc: -1

    outliers:

        # This does outlier rejection based on the chisq value of the residual of the
        # interpolated star with the original.
        type: Chisq

        # The threshold is given in terms of nsigma equivalent, since that's how we normally
        # think of this, but really this is based on the chisq probability distribution for the
        # number of degrees of freedom the model has.
        nsigma: 4

        # Only remove at most 1% of the stars per iteration.
        # Can also set this to an integer to remove at most that many.
        max_remove: 0.03

    model:

        # This model uses a grid of pixels to model the surface brightness distribution.
        type: PixelGrid
        scale: 0.035      # NIRCam ative pixel scale
        size: 28          # Model is 24 x 24 in these pixels

    interp:

        # This interpolator does some of the model solving when interpolating to handle degenerate
        # information from masking and the fact that the pixels are smaller than native.
        type: BasisPolynomial
        order: 3

output:

    # Give the name of the output file.  It's a fits file, but it doesn't need to end if .fits.
    dir: piff-output
    file_name: "psf_model.piff"

    # You may also output a number of stats outputs.
    stats:
        -
            # This produces an output catalog with the mesured sizes, shapes of the stars and
            # the PSF models.  Reserve stars are marked as such in a reserve column.
            type: HSMCatalog
            file_name: "piff_cat.fits"

        -
            # The rest of these are all plots of various statistics about the residuals.
            # This one shows histograms of the size and shape residuals
            type: ShapeHist
            file_name: "piff_shapes.png"
            cut_frac: 0.03   # Default cuts off 1% from each side.
                             # This mostly excludes some outliers we don't much care about.
                             # There are enough stars here that we can reduce this a bit to show
                             # more of the wings.

        -
            # These are the classic rho stats.  They are pretty noisy for just a single
            # exposure, but they can check for egregious errors.
            type: Rho
            file_name: "piff_rho.png"
            # These parameters are TreeCorr parameters for doing the correlation functions.
            min_sep: 0.3
            max_sep: 12
            sep_units: arcmin
            bin_size: 0.4

        -
            # This bins the residuals across the field of view.
            type: TwoDHist
            file_name: "piff_twod.png"
            nbins_u: 20  # Default is 20 for these, but the FOV is large enough that 50 looks good.
            nbins_v: 20

        -
            # This makes a whisker plot of both the raw PSF shape and the PSF shape residuals
            # across the field of view.
            type: Whisker
            file_name: "piff_whisker.png"

        -
            # This selects 20 (nplot) random stars and shows images of the data, the model,
            # and the residual.  When fits are behaving badly, this can give useful clues
            # about the nature of the problem.
            type: Star
            file_name: "piff_stars.png"
            nplot: 20  # Default is 10.  0 will show all the stars, which would be a lot here.

        -
            # Size-magnitude plots?!
            type: SizeMag
            file_name: "piff_sizemag.png"


# Set the verbosity level a little higher than default (1) to give extra information
# about the progress.
verbose: 2
